{"ast":null,"code":"import axios from \"axios\";\nconst initialState = [];\nexport default function todosReducer(state = initialState, action) {\n  switch (action.type) {\n    // omit other reducer cases\n    case 'todos/todosLoaded':\n      {\n        // Replace the existing state entirely by returning the new value\n        return action.payload;\n      }\n\n    default:\n      return state;\n  }\n}\n\nfunction fetchTodos(dispatch, getState) {\n  return dispatch => {\n    axios.get('http://localhost:3333/person').then(function (response) {\n      // handle success\n      dispatch({\n        type: 'todos/todosLoaded',\n        payload: response.person\n      });\n      const stateBefore = getState();\n      console.log('Todos before dispatch: ', stateBefore.todos.length);\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    }).then(function () {// always executed\n    });\n  };\n}","map":{"version":3,"sources":["/home/dipaferdian/reactweb/src/redux/actions.js"],"names":["axios","initialState","todosReducer","state","action","type","payload","fetchTodos","dispatch","getState","get","then","response","person","stateBefore","console","log","todos","length","catch","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,MAAMC,YAAY,GAAG,EAArB;AAEA,eAAe,SAASC,YAAT,CAAsBC,KAAK,GAAGF,YAA9B,EAA4CG,MAA5C,EAAoD;AACjE,UAAQA,MAAM,CAACC,IAAf;AACE;AACA,SAAK,mBAAL;AAA0B;AACxB;AACA,eAAOD,MAAM,CAACE,OAAd;AACD;;AACD;AACE,aAAOH,KAAP;AAPJ;AASD;;AAGD,SAASI,UAAT,CAAoBC,QAApB,EAA8BC,QAA9B,EAAwC;AAEpC,SAAQD,QAAD,IAAc;AAEvBR,IAAAA,KAAK,CAACU,GAAN,CAAU,8BAAV,EACCC,IADD,CACM,UAAUC,QAAV,EAAoB;AACxB;AACAJ,MAAAA,QAAQ,CAAC;AAAEH,QAAAA,IAAI,EAAE,mBAAR;AAA6BC,QAAAA,OAAO,EAAEM,QAAQ,CAACC;AAA/C,OAAD,CAAR;AACA,YAAMC,WAAW,GAAGL,QAAQ,EAA5B;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,WAAW,CAACG,KAAZ,CAAkBC,MAAzD;AACD,KAND,EAOCC,KAPD,CAOO,UAAUC,KAAV,EAAiB;AACtB;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACD,KAVD,EAWCT,IAXD,CAWM,YAAY,CAChB;AACD,KAbD;AAeD,GAjBG;AAmBH","sourcesContent":["import axios from \"axios\"\n\n\nconst initialState = []\n\nexport default function todosReducer(state = initialState, action) {\n  switch (action.type) {\n    // omit other reducer cases\n    case 'todos/todosLoaded': {\n      // Replace the existing state entirely by returning the new value\n      return action.payload\n    }\n    default:\n      return state\n  }\n}\n\n\nfunction fetchTodos(dispatch, getState) {\n  \n    return (dispatch) => {\n  \n  axios.get('http://localhost:3333/person')\n  .then(function (response) {\n    // handle success\n    dispatch({ type: 'todos/todosLoaded', payload: response.person })\n    const stateBefore = getState()\n    console.log('Todos before dispatch: ', stateBefore.todos.length)\n  })\n  .catch(function (error) {\n    // handle error\n    console.log(error);\n  })\n  .then(function () {\n    // always executed\n  });\n\n}\n\n}\n\n\n"]},"metadata":{},"sourceType":"module"}