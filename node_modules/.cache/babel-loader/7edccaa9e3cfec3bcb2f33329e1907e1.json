{"ast":null,"code":"import axios from 'axios';\nexport const ADD_PERSON_SUCCESS = 'ADD_PERSON_SUCCESS';\nexport const ADD_PERSON_FAILURE = 'ADD_PERSON_FAILURE';\nexport default function addTodo(item) {\n  return dispatch => {\n    axios.get(`http://localhost:3333/person`, {}).then(res => {\n      dispatch(addTodoSuccess(res.data));\n    }).catch(err => {\n      dispatch(addTodoFailure(err.message));\n    });\n  };\n}\n;\n\nconst CC = todo => ({\n  type: ADD_PERSON_SUCCESS,\n  payload: { ...todo\n  }\n});\n\n_c = CC;\nconsole.log(addTodo());\n\nconst addTodoFailure = error => ({\n  type: ADD_PERSON_FAILURE,\n  payload: {\n    error\n  }\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"CC\");","map":{"version":3,"sources":["/home/dipaferdian/reactweb/src/action/types.js"],"names":["axios","ADD_PERSON_SUCCESS","ADD_PERSON_FAILURE","addTodo","item","dispatch","get","then","res","addTodoSuccess","data","catch","err","addTodoFailure","message","CC","todo","type","payload","console","log","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AAEP,eAAe,SAASC,OAAT,CAAiBC,IAAjB,EAAsB;AACnC,SAAOC,QAAQ,IAAI;AAEjBL,IAAAA,KAAK,CACFM,GADH,CACQ,8BADR,EACuC,EADvC,EAGGC,IAHH,CAGQC,GAAG,IAAI;AACXH,MAAAA,QAAQ,CAACI,cAAc,CAACD,GAAG,CAACE,IAAL,CAAf,CAAR;AACD,KALH,EAMGC,KANH,CAMSC,GAAG,IAAI;AACZP,MAAAA,QAAQ,CAACQ,cAAc,CAACD,GAAG,CAACE,OAAL,CAAf,CAAR;AACD,KARH;AASD,GAXD;AAYD;AAAA;;AAGD,MAAMC,EAAE,GAAGC,IAAI,KAAK;AAClBC,EAAAA,IAAI,EAAEhB,kBADY;AAElBiB,EAAAA,OAAO,EAAE,EACP,GAAGF;AADI;AAFS,CAAL,CAAf;;KAAMD,E;AAONI,OAAO,CAACC,GAAR,CAAYjB,OAAO,EAAnB;;AAEA,MAAMU,cAAc,GAAGQ,KAAK,KAAK;AAC/BJ,EAAAA,IAAI,EAAEf,kBADyB;AAE/BgB,EAAAA,OAAO,EAAE;AACPG,IAAAA;AADO;AAFsB,CAAL,CAA5B","sourcesContent":["import axios from 'axios';\n\nexport const ADD_PERSON_SUCCESS = 'ADD_PERSON_SUCCESS';\nexport const ADD_PERSON_FAILURE = 'ADD_PERSON_FAILURE';\n\nexport default function addTodo(item){\n  return dispatch => {\n\n    axios\n      .get(`http://localhost:3333/person`, {\n      })\n      .then(res => {\n        dispatch(addTodoSuccess(res.data));\n      })\n      .catch(err => {\n        dispatch(addTodoFailure(err.message));\n      });\n  };\n};\n\n\nconst CC = todo => ({\n  type: ADD_PERSON_SUCCESS,\n  payload: {\n    ...todo\n  }\n});\n\nconsole.log(addTodo())\n\nconst addTodoFailure = error => ({\n  type: ADD_PERSON_FAILURE,\n  payload: {\n    error\n  }\n});"]},"metadata":{},"sourceType":"module"}