{"ast":null,"code":"import axios from 'axios';\nexport const ADD_PERSON_SUCCESS = 'ADD_PERSON_SUCCESS';\nexport const ADD_PERSON_FAILURE = 'ADD_PERSON_FAILURE';\naxios.get(`http://localhost:3333/person`, {}).then(res => {\n  addTodoSuccess(res);\n}).catch(err => {\n  addTodoFailure(err.message);\n});\n\nconst addTodoSuccess = todo => ({\n  type: ADD_PERSON_SUCCESS,\n  payload: todo\n});\n\nconst addTodoFailure = error => ({\n  type: ADD_PERSON_FAILURE,\n  payload: {\n    error\n  }\n});\n\nconst initialState = {\n  setname: \"\",\n  seturl: \"\"\n};\nexport default function todosReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_PERSON_SUCCESS:\n      return { ...state,\n        todos: [...state.todos, action.payload],\n        success: 'true'\n      };\n\n    case ADD_PERSON_FAILURE:\n      return { ...state,\n        failed: 'false'\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/dipaferdian/reactweb/src/reducer/lists.js"],"names":["axios","ADD_PERSON_SUCCESS","ADD_PERSON_FAILURE","get","then","res","addTodoSuccess","catch","err","addTodoFailure","message","todo","type","payload","error","initialState","setname","seturl","todosReducer","state","action","todos","success","failed"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AAGLF,KAAK,CACFG,GADH,CACQ,8BADR,EACuC,EADvC,EAGGC,IAHH,CAGQC,GAAG,IAAI;AACXC,EAAAA,cAAc,CAACD,GAAD,CAAd;AACD,CALH,EAMGE,KANH,CAMSC,GAAG,IAAI;AACbC,EAAAA,cAAc,CAACD,GAAG,CAACE,OAAL,CAAd;AACA,CARH;;AAUF,MAAMJ,cAAc,GAAIK,IAAD,KAAW;AAChCC,EAAAA,IAAI,EAAEX,kBAD0B;AAEhCY,EAAAA,OAAO,EAAEF;AAFuB,CAAX,CAAvB;;AAKA,MAAMF,cAAc,GAAGK,KAAK,KAAK;AAC/BF,EAAAA,IAAI,EAAEV,kBADyB;AAE/BW,EAAAA,OAAO,EAAE;AACPC,IAAAA;AADO;AAFsB,CAAL,CAA5B;;AAOA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,EADU;AAEnBC,EAAAA,MAAM,EAAE;AAFW,CAArB;AAKA,eAAe,SAASC,YAAT,CAAsBC,KAAK,GAAGJ,YAA9B,EAA4CK,MAA5C,EAAoD;AACjE,UAAQA,MAAM,CAACR,IAAf;AACE,SAAKX,kBAAL;AACE,aAAO,EACL,GAAGkB,KADE;AAELE,QAAAA,KAAK,EAAC,CAAC,GAAGF,KAAK,CAACE,KAAV,EAAgBD,MAAM,CAACP,OAAvB,CAFD;AAGLS,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAMF,SAAKpB,kBAAL;AACE,aAAO,EACL,GAAGiB,KADE;AAELI,QAAAA,MAAM,EAAE;AAFH,OAAP;;AAIF;AACE,aAAOJ,KAAP;AAdJ;AAgBA","sourcesContent":["import axios from 'axios';\n\nexport const ADD_PERSON_SUCCESS = 'ADD_PERSON_SUCCESS';\nexport const ADD_PERSON_FAILURE = 'ADD_PERSON_FAILURE';\n\n\n  axios\n    .get(`http://localhost:3333/person`, {\n    })\n    .then(res => {\n      addTodoSuccess(res);\n    })\n    .catch(err => {\n     addTodoFailure(err.message);\n    });\n\nconst addTodoSuccess = (todo) => ({\n  type: ADD_PERSON_SUCCESS,\n  payload: todo\n});\n\nconst addTodoFailure = error => ({\n  type: ADD_PERSON_FAILURE,\n  payload: {\n    error\n  }\n});\n\nconst initialState = {\n  setname: \"\",\n  seturl: \"\",\n};\n\nexport default function todosReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_PERSON_SUCCESS:\n      return {\n        ...state,\n        todos:[...state.todos,action.payload],\n        success: 'true'\n        \n      };\n    case ADD_PERSON_FAILURE:\n      return {\n        ...state,\n        failed: 'false'\n      };\n    default:\n      return state;\n  }\n }"]},"metadata":{},"sourceType":"module"}