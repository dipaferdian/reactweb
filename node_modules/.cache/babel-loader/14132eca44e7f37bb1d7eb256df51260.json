{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/dipaferdian/reactweb/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nclass Conditional extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleturnOnClick = this.handleturnOnClick.bind(this);\n    this.handleturnOffClick = this.handleturnOffClick.bind(this);\n    this.state = {\n      isLamp: false\n    };\n  }\n\n  handleturnOnClick() {\n    this.setState({\n      isLoggedIn: true\n    });\n  }\n\n  handleturnOffClick() {\n    this.setState({\n      isLoggedIn: false\n    });\n  }\n\n  render() {\n    let button;\n\n    if (false) {\n      button = /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ON\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this);\n    } else {\n      button = /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"OFF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: voids\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(Conditional, {\n    greeting: \"Hi\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 52,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["/home/dipaferdian/reactweb/src/index.js"],"names":["React","ReactDOM","reportWebVitals","Conditional","Component","constructor","props","handleturnOnClick","bind","handleturnOffClick","state","isLamp","setState","isLoggedIn","render","button","voids","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAGA,MAAMC,WAAN,SAA0BH,KAAK,CAACI,SAAhC,CAAyC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKC,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBD,IAAxB,CAA6B,IAA7B,CAA1B;AACA,SAAKE,KAAL,GAAa;AAACC,MAAAA,MAAM,EAAE;AAAT,KAAb;AACD;;AAGDJ,EAAAA,iBAAiB,GAAG;AAClB,SAAKK,QAAL,CAAc;AAACC,MAAAA,UAAU,EAAE;AAAb,KAAd;AACD;;AAEDJ,EAAAA,kBAAkB,GAAG;AACnB,SAAKG,QAAL,CAAc;AAACC,MAAAA,UAAU,EAAE;AAAb,KAAd;AACD;;AAEAC,EAAAA,MAAM,GAAE;AAEP,QAAIC,MAAJ;;AAEC,QAAG,KAAH,EAAS;AAEHA,MAAAA,MAAM,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAT;AAEJ,KAJF,MAIM;AAEAA,MAAAA,MAAM,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAT;AACJ;;AAEF,wBAEG;AAAA,gBAAMC;AAAN;AAAA;AAAA;AAAA;AAAA,YAFH;AAQA;;AAtCoC;;AA4CzCf,QAAQ,CAACa,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,WAAD;AAAa,IAAA,QAAQ,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAIEG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF,E,CAOA;AACA;AACA;;AACAhB,eAAe","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\n\nclass Conditional extends React.Component{\n  constructor(props) {\n    super(props);\n    this.handleturnOnClick = this.handleturnOnClick.bind(this);\n    this.handleturnOffClick = this.handleturnOffClick.bind(this);\n    this.state = {isLamp: false};\n  }\n\n\n  handleturnOnClick() {\n    this.setState({isLoggedIn: true});\n  }\n\n  handleturnOffClick() {\n    this.setState({isLoggedIn: false});\n  }\n\n   render(){\n    \n    let button;\n\n     if(false){\n          \n           button = <h1>ON</h1>; \n\n      }else{\n\n           button = <h1>OFF</h1>;\n      }\n\n     return (\n        \n        <div>{voids}</div> \n     );\n\n\n\n\n    }\n    \n\n}\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Conditional greeting=\"Hi\"/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}