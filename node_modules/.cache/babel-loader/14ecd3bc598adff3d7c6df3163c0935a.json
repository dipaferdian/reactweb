{"ast":null,"code":"import axios from 'axios';\nconst ADD_PERSON_SUCCESS = 'ADD_PERSON_SUCCESS';\nconst ADD_PERSON_FAILURE = 'ADD_PERSON_FAILURE';\nexport const addTodo = name => {\n  return dispatch => {\n    axios.post(`https://jsonplaceholder.typicode.com/todos`, {\n      name,\n      completed: false\n    }).then(res => {\n      dispatch(addPersonSuccess(res.data));\n    }).catch(err => {\n      dispatch(addPersonFailure(err.message));\n    });\n  };\n};\n\nconst addPersonSuccess = todo => ({\n  type: ADD_PERSON_SUCCESS,\n  payload: { ...todo\n  }\n});\n\nconst addPersonFailure = error => ({\n  type: ADD_PERSON_FAILURE,\n  payload: {\n    error\n  }\n});\n\nconst initialState = {\n  setname: \"\",\n  seturl: \"\"\n};\nexport default function todosReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_TODO_SUCCESS:\n      return { ...state,\n        todos: [...state.todos, action.payload]\n      };\n\n    case ADD_TODO_FAILURE:\n      return { ...state,\n        error: action.payload.error\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/dipaferdian/reactweb/src/store/person.js"],"names":["axios","ADD_PERSON_SUCCESS","ADD_PERSON_FAILURE","addTodo","name","dispatch","post","completed","then","res","addPersonSuccess","data","catch","err","addPersonFailure","message","todo","type","payload","error","initialState","setname","seturl","todosReducer","state","action","ADD_TODO_SUCCESS","todos","ADD_TODO_FAILURE"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,kBAAkB,GAAG,oBAA3B;AACA,MAAMC,kBAAkB,GAAG,oBAA3B;AAEA,OAAO,MAAMC,OAAO,GAAKC,IAAF,IAAY;AAEjC,SAAOC,QAAQ,IAAI;AAEjBL,IAAAA,KAAK,CACFM,IADH,CACS,4CADT,EACsD;AAClDF,MAAAA,IADkD;AAElDG,MAAAA,SAAS,EAAE;AAFuC,KADtD,EAKGC,IALH,CAKQC,GAAG,IAAI;AACXJ,MAAAA,QAAQ,CAACK,gBAAgB,CAACD,GAAG,CAACE,IAAL,CAAjB,CAAR;AACD,KAPH,EAQGC,KARH,CAQSC,GAAG,IAAI;AACZR,MAAAA,QAAQ,CAACS,gBAAgB,CAACD,GAAG,CAACE,OAAL,CAAjB,CAAR;AACD,KAVH;AAWD,GAbD;AAcD,CAhBM;;AAmBP,MAAML,gBAAgB,GAAGM,IAAI,KAAK;AAChCC,EAAAA,IAAI,EAAEhB,kBAD0B;AAEhCiB,EAAAA,OAAO,EAAE,EACP,GAAGF;AADI;AAFuB,CAAL,CAA7B;;AAQA,MAAMF,gBAAgB,GAAGK,KAAK,KAAK;AACjCF,EAAAA,IAAI,EAAEf,kBAD2B;AAEjCgB,EAAAA,OAAO,EAAE;AACPC,IAAAA;AADO;AAFwB,CAAL,CAA9B;;AAQA,MAAMC,YAAY,GAAG;AAElBC,EAAAA,OAAO,EAAE,EAFS;AAGlBC,EAAAA,MAAM,EAAE;AAHU,CAArB;AAOA,eAAe,SAASC,YAAT,CAAsBC,KAAK,GAAGJ,YAA9B,EAA4CK,MAA5C,EAAoD;AACjE,UAAQA,MAAM,CAACR,IAAf;AACE,SAAKS,gBAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELG,QAAAA,KAAK,EAAE,CAAC,GAAGH,KAAK,CAACG,KAAV,EAAiBF,MAAM,CAACP,OAAxB;AAFF,OAAP;;AAIF,SAAKU,gBAAL;AACE,aAAO,EACL,GAAGJ,KADE;AAELL,QAAAA,KAAK,EAAEM,MAAM,CAACP,OAAP,CAAeC;AAFjB,OAAP;;AAIF;AACE,aAAOK,KAAP;AAZJ;AAcD","sourcesContent":["import axios from 'axios';\n\nconst ADD_PERSON_SUCCESS = 'ADD_PERSON_SUCCESS';\nconst ADD_PERSON_FAILURE = 'ADD_PERSON_FAILURE';\n\nexport const addTodo = ( name ) => {\n\n  return dispatch => {\n\n    axios\n      .post(`https://jsonplaceholder.typicode.com/todos`, {\n        name,\n        completed: false\n      })\n      .then(res => {\n        dispatch(addPersonSuccess(res.data));\n      })\n      .catch(err => {\n        dispatch(addPersonFailure(err.message));\n      });\n  };\n};\n\n\nconst addPersonSuccess = todo => ({\n  type: ADD_PERSON_SUCCESS,\n  payload: {\n    ...todo\n  }\n});\n\n\nconst addPersonFailure = error => ({\n  type: ADD_PERSON_FAILURE,\n  payload: {\n    error\n  }\n});\n\n\nconst initialState = {\n   \n   setname: \"\",\n   seturl: \"\"\n\n};\n\nexport default function todosReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_TODO_SUCCESS:\n      return {\n        ...state,\n        todos: [...state.todos, action.payload]\n      };\n    case ADD_TODO_FAILURE:\n      return {\n        ...state,\n        error: action.payload.error\n      };\n    default:\n      return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}