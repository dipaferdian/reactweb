{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: {\n    value: 0\n  },\n  reducers: {\n    incremented: state => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 2;\n    },\n    decremented: state => {\n      state.value -= 2;\n    }\n  }\n});\nexport const {\n  incremented,\n  decremented\n} = counterSlice.actions;\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});","map":{"version":3,"sources":["/home/dipaferdian/reactweb/src/redux_reducers/reducers.js"],"names":["createSlice","counterSlice","name","initialState","value","reducers","incremented","state","decremented","actions","store","configureStore","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAGD,WAAW,CAAC;AAC7BE,EAAAA,IAAI,EAAE,SADuB;AAE7BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE;AADK,GAFe;AAK7BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,WAAW,EAAEC,KAAK,IAAI;AACpB;AACA;AACA;AACA;AACAA,MAAAA,KAAK,CAACH,KAAN,IAAe,CAAf;AACD,KAPO;AAQRI,IAAAA,WAAW,EAAED,KAAK,IAAI;AACpBA,MAAAA,KAAK,CAACH,KAAN,IAAe,CAAf;AACD;AAVO;AALmB,CAAD,CAAhC;AAmBE,OAAO,MAAM;AAAEE,EAAAA,WAAF;AAAeE,EAAAA;AAAf,IAA+BP,YAAY,CAACQ,OAAlD;AAEP,MAAMC,KAAK,GAAGC,cAAc,CAAC;AAC3BC,EAAAA,OAAO,EAAEX,YAAY,CAACW;AADK,CAAD,CAA5B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst counterSlice = createSlice({\n    name: 'counter',\n    initialState: {\n      value: 0\n    },\n    reducers: {\n      incremented: state => {\n        // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n        // doesn't actually mutate the state because it uses the Immer library,\n        // which detects changes to a \"draft state\" and produces a brand new\n        // immutable state based off those changes\n        state.value += 2\n      },\n      decremented: state => {\n        state.value -= 2\n      }\n    }\n  })\n\n  export const { incremented, decremented } = counterSlice.actions\n\n  const store = configureStore({\n    reducer: counterSlice.reducer\n  })\n  \n\n\n  "]},"metadata":{},"sourceType":"module"}