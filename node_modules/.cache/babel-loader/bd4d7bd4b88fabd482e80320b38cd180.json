{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/dipaferdian/reactweb/src/App.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport store from '.';\nimport { addNumber } from './redux_actions/actions';\n\nconst Counter = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Count: \", this.props.count, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.onAddClick,\n      children: \"Add 7!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Counter;\n\nconst mapStateToProps = ({\n  count\n}) => ({\n  count\n});\n\nconst mapDispatchToProps = {\n  addNumber\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["/home/dipaferdian/reactweb/src/App.js"],"names":["React","connect","store","addNumber","Counter","props","count","onAddClick","mapStateToProps","mapDispatchToProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,GAAlB;AACA,SAASC,SAAT,QAA0B,yBAA1B;;AAIA,MAAMC,OAAO,GAAG,MAAM;AAEnB,sBACC;AAAA,0BACQ,KAAKC,KAAL,CAAWC,KADnB,eAEA;AAAQ,MAAA,OAAO,EAAE,KAAKC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AASF,CAXD;;KAAMH,O;;AAaN,MAAMI,eAAe,GAAG,CAAC;AAACF,EAAAA;AAAD,CAAD,MAAc;AACnCA,EAAAA;AADmC,CAAd,CAAxB;;AAIA,MAAMG,kBAAkB,GAAG;AAACN,EAAAA;AAAD,CAA3B;AAEA,eAAeF,OAAO,CAACO,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CL,OAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport store from '.';\nimport { addNumber } from './redux_actions/actions';\n\n\n\nconst Counter = () => {\n\n   return(\n    <div>\n    Count: {this.props.count}\n    <button onClick={this.onAddClick}>\n      Add 7!\n    </button>\n  </div>  \n   );    \n\n}\n \nconst mapStateToProps = ({count}) => ({\n   count\n});\n\nconst mapDispatchToProps = {addNumber};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);"]},"metadata":{},"sourceType":"module"}