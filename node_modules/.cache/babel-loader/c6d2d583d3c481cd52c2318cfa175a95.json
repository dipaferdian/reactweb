{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dipaferdian/reactweb/src/App.js\",\n    _s = $RefreshSig$();\n\n//post resquest with react redux thunk\n//get request with react redux thunk+useeffect\nimport \"./sass/main.css\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.css\";\nimport \"../node_modules/bootstrap/dist/js/bootstrap.bundle\";\nimport React, { useState } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport axios from \"axios\";\nconst apiUrl = \"http://localhost:3001\";\n\nasync function loginUser(credentials) {\n  return axios.get(this.BASE_URL + \"/profile/me\", {\n    headers: {\n      Authorization: `Bearer ${JWTToken}`\n    }\n  }).then(res => {\n    res.data;\n    console.log(\"profile is:\", res.data);\n  }).catch(error => console.log(error));\n}\n\njwtRequest(\"/api/example\", localStorage.jwt);\n\nfunction App() {\n  _s();\n\n  const storedJwt = localStorage.getItem(\"token\");\n  const [jwt, setJwt] = useState(storedJwt || null);\n  const [foods, setFoods] = useState([]);\n  const [fetchError, setFetchError] = useState(null);\n\n  const getJwt = async () => {\n    const {\n      data\n    } = await axios.get(`${apiUrl}/jwt`);\n    localStorage.setItem(\"token\", data.token);\n    setJwt(data.token);\n  };\n\n  const getFoods = async () => {\n    try {\n      const {\n        data\n      } = await axios.get(`${apiUrl}/foods`);\n      setFoods(data);\n      setFetchError(null);\n    } catch (err) {\n      setFetchError(err.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      style: {\n        marginBottom: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => getJwt(),\n        children: \"Get JWT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), jwt && /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: /*#__PURE__*/_jsxDEV(\"code\", {\n          children: jwt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => getFoods(),\n        children: \"Get Foods\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: foods.map((food, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: food.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), fetchError && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: fetchError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"EzXAJbwPsTMfmNfl67OEHeAxF0g=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/dipaferdian/reactweb/src/App.js"],"names":["React","useState","BrowserRouter","Route","Switch","axios","apiUrl","loginUser","credentials","get","BASE_URL","headers","Authorization","JWTToken","then","res","data","console","log","catch","error","jwtRequest","localStorage","jwt","App","storedJwt","getItem","setJwt","foods","setFoods","fetchError","setFetchError","getJwt","setItem","token","getFoods","err","message","marginBottom","map","food","i","description","color"],"mappings":"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","sourcesContent":["//post resquest with react redux thunk\n//get request with react redux thunk+useeffect\n\nimport \"./sass/main.css\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.css\";\nimport \"../node_modules/bootstrap/dist/js/bootstrap.bundle\";\nimport React, { useState } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst apiUrl = \"http://localhost:3001\";\n\nasync function loginUser(credentials) {\n\n  return axios\n    .get(this.BASE_URL + \"/profile/me\", {\n      headers: { Authorization: `Bearer ${JWTToken}` },\n    })\n    .then((res) => {\n      res.data;\n      console.log(\"profile is:\", res.data);\n    })\n    .catch((error) => console.log(error));\n}\n\n\n\njwtRequest(\"/api/example\", localStorage.jwt);\n\nfunction App() {\n  const storedJwt = localStorage.getItem(\"token\");\n\n  const [jwt, setJwt] = useState(storedJwt || null);\n  const [foods, setFoods] = useState([]);\n  const [fetchError, setFetchError] = useState(null);\n\n  const getJwt = async () => {\n    const { data } = await axios.get(`${apiUrl}/jwt`);\n    localStorage.setItem(\"token\", data.token);\n    setJwt(data.token);\n  };\n\n  const getFoods = async () => {\n    try {\n      const { data } = await axios.get(`${apiUrl}/foods`);\n      setFoods(data);\n      setFetchError(null);\n    } catch (err) {\n      setFetchError(err.message);\n    }\n  };\n\n  return (\n    <>\n      <section style={{ marginBottom: \"10px\" }}>\n        <button onClick={() => getJwt()}>Get JWT</button>\n        {jwt && (\n          <pre>\n            <code>{jwt}</code>\n          </pre>\n        )}\n      </section>\n      <section>\n        <button onClick={() => getFoods()}>Get Foods</button>\n        <ul>\n          {foods.map((food, i) => (\n            <li>{food.description}</li>\n          ))}\n        </ul>\n        {fetchError && <p style={{ color: \"red\" }}>{fetchError}</p>}\n      </section>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}