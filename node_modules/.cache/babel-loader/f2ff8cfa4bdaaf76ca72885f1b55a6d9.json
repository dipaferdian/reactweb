{"ast":null,"code":"import axios from 'axios';\nexport const ADD_PERSON_SUCCESS = 'ADD_PERSON_SUCCESS';\nexport const ADD_PERSON_FAILURE = 'ADD_PERSON_FAILURE';\nexport const addTodo = () => {\n  return dispatch => {\n    dispatch(addTodoStarted());\n    axios.get(`https://jsonplaceholder.typicode.com/todos`).then(res => {\n      dispatch(addTodoSuccess(res.person));\n    }).catch(err => {\n      dispatch(addTodoFailure(err.message));\n    });\n  };\n};\n\nconst addTodoSuccess = todo => ({\n  type: ADD_TODO_SUCCESS,\n  payload: { ...todo\n  }\n});\n\nconst addTodoFailure = error => ({\n  type: ADD_TODO_FAILURE,\n  payload: {\n    error\n  }\n});\n\nconst initialState = {\n  setname: \"\",\n  seturl: \"\",\n  todos: []\n};\nexport default function todosReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_PERSON_SUCCESS:\n      return { ...state,\n        todos: [...state.todos, action.payload]\n      };\n\n    case ADD_PERSON_FAILURE:\n      return { ...state,\n        failed: 'false'\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/dipaferdian/reactweb/src/reducer/lists.js"],"names":["axios","ADD_PERSON_SUCCESS","ADD_PERSON_FAILURE","addTodo","dispatch","addTodoStarted","get","then","res","addTodoSuccess","person","catch","err","addTodoFailure","message","todo","type","ADD_TODO_SUCCESS","payload","error","ADD_TODO_FAILURE","initialState","setname","seturl","todos","todosReducer","state","action","failed"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AAGP,OAAO,MAAMC,OAAO,GAAG,MAAM;AAE3B,SAAOC,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAACC,cAAc,EAAf,CAAR;AAEAL,IAAAA,KAAK,CACFM,GADH,CACQ,4CADR,EAEGC,IAFH,CAEQC,GAAG,IAAI;AACXJ,MAAAA,QAAQ,CAACK,cAAc,CAACD,GAAG,CAACE,MAAL,CAAf,CAAR;AACD,KAJH,EAKGC,KALH,CAKSC,GAAG,IAAI;AACZR,MAAAA,QAAQ,CAACS,cAAc,CAACD,GAAG,CAACE,OAAL,CAAf,CAAR;AACD,KAPH;AAQD,GAXD;AAaD,CAfM;;AAiBP,MAAML,cAAc,GAAGM,IAAI,KAAK;AAC9BC,EAAAA,IAAI,EAAEC,gBADwB;AAE9BC,EAAAA,OAAO,EAAE,EACP,GAAGH;AADI;AAFqB,CAAL,CAA3B;;AAOA,MAAMF,cAAc,GAAGM,KAAK,KAAK;AAC/BH,EAAAA,IAAI,EAAEI,gBADyB;AAE/BF,EAAAA,OAAO,EAAE;AACPC,IAAAA;AADO;AAFsB,CAAL,CAA5B;;AAQA,MAAME,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,EADU;AAEnBC,EAAAA,MAAM,EAAE,EAFW;AAGnBC,EAAAA,KAAK,EAAC;AAHa,CAArB;AAQA,eAAe,SAASC,YAAT,CAAsBC,KAAK,GAAGL,YAA9B,EAA4CM,MAA5C,EAAoD;AACjE,UAAQA,MAAM,CAACX,IAAf;AACE,SAAKf,kBAAL;AACE,aAAO,EACL,GAAGyB,KADE;AAELF,QAAAA,KAAK,EAAC,CAAC,GAAGE,KAAK,CAACF,KAAV,EAAgBG,MAAM,CAACT,OAAvB;AAFD,OAAP;;AAIF,SAAKhB,kBAAL;AACE,aAAO,EACL,GAAGwB,KADE;AAELE,QAAAA,MAAM,EAAE;AAFH,OAAP;;AAIF;AACE,aAAOF,KAAP;AAZJ;AAcA","sourcesContent":["import axios from 'axios';\n\nexport const ADD_PERSON_SUCCESS = 'ADD_PERSON_SUCCESS';\nexport const ADD_PERSON_FAILURE = 'ADD_PERSON_FAILURE';\n\n\nexport const addTodo = () => {\n\n  return dispatch => {\n    dispatch(addTodoStarted());\n\n    axios\n      .get(`https://jsonplaceholder.typicode.com/todos`)\n      .then(res => {\n        dispatch(addTodoSuccess(res.person));\n      })\n      .catch(err => {\n        dispatch(addTodoFailure(err.message));\n      });\n  };\n\n};\n\nconst addTodoSuccess = todo => ({\n  type: ADD_TODO_SUCCESS,\n  payload: {\n    ...todo\n  }\n});\n\nconst addTodoFailure = error => ({\n  type: ADD_TODO_FAILURE,\n  payload: {\n    error\n  }\n});\n\n\nconst initialState = {\n  setname: \"\",\n  seturl: \"\",\n  todos:[]\n};\n\n\n\nexport default function todosReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_PERSON_SUCCESS:\n      return {\n        ...state,\n        todos:[...state.todos,action.payload]\n      };\n    case ADD_PERSON_FAILURE:\n      return {\n        ...state,\n        failed: 'false'\n      };\n    default:\n      return state;\n  }\n }"]},"metadata":{},"sourceType":"module"}