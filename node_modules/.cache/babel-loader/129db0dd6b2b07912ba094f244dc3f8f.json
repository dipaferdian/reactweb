{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/dipaferdian/reactweb/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nclass Conditional extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleturnOnClick = this.handleturnOnClick.bind(this);\n    this.state = {\n      isList: []\n    };\n  }\n\n  handleturnOnClick() {\n    this.setState({\n      isList: [1, 2, 3]\n    });\n  }\n\n  render() {\n    const todoItems = this.state.isList.map((todo, index) =>\n    /*#__PURE__*/\n    // Only do this if items have no stable IDs\n    _jsxDEV(\"li\", {\n      children: todo.text\n    }, todo, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), todoItems, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.handleturnOnClick(),\n        children: \"Show List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(Conditional, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 49,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["/home/dipaferdian/reactweb/src/index.js"],"names":["React","ReactDOM","reportWebVitals","Conditional","Component","constructor","props","handleturnOnClick","bind","state","isList","setState","render","todoItems","map","todo","index","text","logo","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,OAAO,WAAP;;AAEA,MAAMC,WAAN,SAA0BH,KAAK,CAACI,SAAhC,CAAyC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,MAAM,EAAE;AAAT,KAAb;AACD;;AAGDH,EAAAA,iBAAiB,GAAG;AAClB,SAAKI,QAAL,CAAc;AAACD,MAAAA,MAAM,EAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL;AAAT,KAAd;AACD;;AAGAE,EAAAA,MAAM,GAAE;AAEP,UAAMC,SAAS,GAAG,KAAKJ,KAAL,CAAWC,MAAX,CAAkBI,GAAlB,CAAsB,CAACC,IAAD,EAAOC,KAAP;AAAA;AACxC;AACA;AAAA,gBACGD,IAAI,CAACE;AADR,OAASF,IAAT;AAAA;AAAA;AAAA;AAAA,YAFkB,CAAlB;AAOC,wBAEC;AAAA,8BACI;AAAK,QAAA,GAAG,EAAEG,IAAV;AAAgB,QAAA,SAAS,EAAC,UAA1B;AAAqC,QAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKL,SAFL,eAGI;AAAQ,QAAA,OAAO,EAAE,MAAI,KAAKN,iBAAL,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD;AAYA;;AAlCoC;;AAwCzCN,QAAQ,CAACW,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAIEO,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF,E,CAOA;AACA;AACA;;AACAlB,eAAe","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass Conditional extends React.Component{\n  constructor(props) {\n    super(props);\n    this.handleturnOnClick = this.handleturnOnClick.bind(this);\n    this.state = {isList: []};\n  }\n\n\n  handleturnOnClick() {\n    this.setState({isList: [1,2,3]});\n  }\n\n\n   render(){\n    \n    const todoItems = this.state.isList.map((todo, index) =>\n    // Only do this if items have no stable IDs\n    <li key={todo}>\n      {todo.text}\n    </li>\n  );\n    \n     return (\n      \n      <div>\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          {todoItems}\n          <button onClick={()=>this.handleturnOnClick()}>Show List</button>\n      </div> \n     \n     );\n\n\n\n    }\n    \n\n}\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Conditional />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}