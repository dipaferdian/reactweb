{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dipaferdian/reactweb/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./sass/main.css\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.css\";\nimport \"../node_modules/bootstrap/dist/js/bootstrap.bundle\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUsers } from '../src/redux/actions';\n\nfunction App({\n  userData,\n  fetchUsers\n}) {\n  _s();\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  return userData.loading ? /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this) : userData.error ? /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: userData.error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Users List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: userData && userData.users && userData.users.map(user => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 38\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = App;\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUsers: () => dispatch(fetchUsers())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/dipaferdian/reactweb/src/App.js"],"names":["React","useEffect","connect","fetchUsers","App","userData","loading","error","users","map","user","name","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;;;;AAAA,OAAO,iBAAP;AACA,OAAO,kDAAP;AACA,OAAO,oDAAP;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,sBAA3B;;AAEA,SAASC,GAAT,CAAc;AAAEC,EAAAA,QAAF;AAAYF,EAAAA;AAAZ,CAAd,EAAwC;AAAA;;AACtCF,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;AAGA,SAAOE,QAAQ,CAACC,OAAT,gBACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADK,GAEHD,QAAQ,CAACE,KAAT,gBACF;AAAA,cAAKF,QAAQ,CAACE;AAAd;AAAA;AAAA;AAAA;AAAA,UADE,gBAGF;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACGF,QAAQ,IACPA,QAAQ,CAACG,KADV,IAECH,QAAQ,CAACG,KAAT,CAAeC,GAAf,CAAmBC,IAAI,iBAAI;AAAA,kBAAIA,IAAI,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,cAA3B;AAHJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UALF;AAcD;;GAlBQP,G;;KAAAA,G;;AAoBT,MAAMQ,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLR,IAAAA,QAAQ,EAAEQ,KAAK,CAACH;AADX,GAAP;AAGD,CAJD;;AAMA,MAAMI,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLZ,IAAAA,UAAU,EAAE,MAAMY,QAAQ,CAACZ,UAAU,EAAX;AADrB,GAAP;AAGD,CAJD;;AAMA,eAAeD,OAAO,CACpBU,eADoB,EAEpBE,kBAFoB,CAAP,CAGbV,GAHa,CAAf","sourcesContent":["import \"./sass/main.css\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.css\";\nimport \"../node_modules/bootstrap/dist/js/bootstrap.bundle\";\n\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { fetchUsers } from '../src/redux/actions'\n\nfunction App ({ userData, fetchUsers }) {\n  useEffect(() => {\n    fetchUsers()\n  }, [])\n  return userData.loading ? (\n    <h2>Loading</h2>\n  ) : userData.error ? (\n    <h2>{userData.error}</h2>\n  ) : (\n    <div>\n      <h2>Users List</h2>\n      <div>\n        {userData &&\n          userData.users &&\n          userData.users.map(user => <p>{user.name}</p>)}\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.user\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUsers: () => dispatch(fetchUsers())\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App)\n\n"]},"metadata":{},"sourceType":"module"}