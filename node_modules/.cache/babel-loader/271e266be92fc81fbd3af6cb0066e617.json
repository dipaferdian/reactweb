{"ast":null,"code":"import axios from \"axios\";\n\nfunction fetchTodos() {\n  return dispatch => {\n    axios.get('http://localhost:3333/person').then(function (response) {\n      // handle success\n      dispatch({\n        type: 'todos/todosLoaded',\n        payload: response.person\n      });\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    }).then(function () {// always executed\n    });\n  };\n}\n\nconst initialState = [];\nexport default function todosReducer(state = initialState, action) {\n  switch (action.type) {\n    // omit other reducer cases\n    case 'todos/todosLoaded':\n      {\n        // Replace the existing state entirely by returning the new value\n        return action.payload;\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/dipaferdian/reactweb/src/redux/actions.js"],"names":["axios","fetchTodos","dispatch","get","then","response","type","payload","person","catch","error","console","log","initialState","todosReducer","state","action"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAIA,SAASC,UAAT,GAAsB;AAElB,SAAQC,QAAD,IAAc;AAEvBF,IAAAA,KAAK,CAACG,GAAN,CAAU,8BAAV,EACCC,IADD,CACM,UAAUC,QAAV,EAAoB;AACxB;AACAH,MAAAA,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAE,mBAAR;AAA6BC,QAAAA,OAAO,EAAEF,QAAQ,CAACG;AAA/C,OAAD,CAAR;AACD,KAJD,EAKCC,KALD,CAKO,UAAUC,KAAV,EAAiB;AACtB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KARD,EASCN,IATD,CASM,YAAY,CAChB;AACD,KAXD;AAaD,GAfG;AAiBH;;AAGD,MAAMS,YAAY,GAAG,EAArB;AAEA,eAAe,SAASC,YAAT,CAAsBC,KAAK,GAAGF,YAA9B,EAA4CG,MAA5C,EAAoD;AACjE,UAAQA,MAAM,CAACV,IAAf;AACE;AACA,SAAK,mBAAL;AAA0B;AACxB;AACA,eAAOU,MAAM,CAACT,OAAd;AACD;;AACD;AACE,aAAOQ,KAAP;AAPJ;AASD","sourcesContent":["import axios from \"axios\"\n\n\n\nfunction fetchTodos() {\n  \n    return (dispatch) => {\n  \n  axios.get('http://localhost:3333/person')\n  .then(function (response) {\n    // handle success\n    dispatch({ type: 'todos/todosLoaded', payload: response.person })\n  })\n  .catch(function (error) {\n    // handle error\n    console.log(error);\n  })\n  .then(function () {\n    // always executed\n  });\n\n}\n\n}\n\n\nconst initialState = []\n\nexport default function todosReducer(state = initialState, action) {\n  switch (action.type) {\n    // omit other reducer cases\n    case 'todos/todosLoaded': {\n      // Replace the existing state entirely by returning the new value\n      return action.payload\n    }\n    default:\n      return state\n  }\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}